1



A scalable non-myopic dynamic dial-a-ride and pricing problem for competitive  on-demand  mobility  systems






                                                ABSTRACT


We propose a competitive on-demand mobility model using a multi-server queue system under
inﬁnite-horizon look-ahead. The proposed approach includes a novel dynamic optimization algorithm 
which employs a Markov decision process (MDP) and provides opportunities to revolutionize
conventional transit services that are plagued by high cost, low ridership, and general inefficiency,
particularly in disadvantaged communities and low-income areas. We use this
model to study the implications it has for such services and investigate whether it has a distinct 
cost advantage and operational improvement. Wedevelop a dynamic pricing scheme that utilizes 
a balking rule that incorporates socially efficient level and the revenue-maximizing price, and an
equilibrium-joining threshold obtained by imposing a toll on the customers who join the system. 
Results of numerical simulations based on actual New York City taxicab data indicate that a
competitive on-demand mobility system supported by the proposed model increases the social
welfare by up to 37% on average compared to the single-server queuing system. The study offers
a novel design scheme and supporting tools for more effective budget/resource allocation, 
planning, and operation management of ﬂexible transit systems.


Keywords:
Markov decision process
Sharing economy
Dynamic dial-a-ride problem
Multi-server queue
Dynamic pricing
Flexible transit services


1.  Introduction


     The sharing  economy provides opportunities  for  individuals  in  both  the buying  and sharing of  products or  services. Sharing-economy
platforms allow  people to ﬁnd  temporary employment,  generate extra income, increase reciprocity, enhance social interaction,
and access resources that are otherwise unattainable. Uber and  Airbnb are  among the world’s  leading businesses in transportation
and hospitality,   respectively. While many municipalities  and  regions have blocked these new forms of commerce, others
have accepted change as inevitable and have been eager to provide new efficiencies for consumers. For example, Hall and Krueger
(2016) argue  that  the availability   of  modern technology  such as the  Uber  app provides numerous  advantages, including  lower
consumer fares and  potentially  higher  earnings for  drivers,  over  the  traditional  taxicab  dispatch  system. Although  the  sharing
economy is pro ﬁtable, little   is known  about  its  use among unemployed and  low-income  individuals  and families.  Some reports
suggest that this new platform  of economic activity  is highly  insecure and that contingent  employment leads to the exploitation  of
workers (Summers and Balls, 2015).  Bernhardt (2014)  signals a cautionary note  about any claims  of radical  recent change being
wrought across the U.S. economy and identiﬁes data gaps that need to be closed and research questions that need to be answered in
order to improve workplace and labor standards. For example, why is the traditional taxicab dispatch system unable to compete with
or rival the new forms of  commerce, and does the sharing economy really provide beneﬁts? One key aspect of our smart on-demand
transit approach is social efficiency,  in terms of  both the level  of service and the computational effort needed to operate it.




2



     For a  traditional  taxicab  dispatch system, the ﬁ rst–last mile  problem  is challenging  because it calls for  high  ﬂexibility   under
relatively low-density  usage, which implies a high cost to implement.  As an example, taxicab drivers in New York  City (NYC) spent
39% of their total mileage cruising for  passengers in 2005 (see Schaller Consulting, 2006). Such a system is often inefficient, because
of the use of expensive vehicles, high fuel costs, heavily congested traffic, and a low ratio of  busy to idle vehicles (see Powell et al.,
2011). In addition  to  the costs, this is a  major environmental  concern, since the burning  of fossil fuels  in vehicles is a major  contributor
to global warming.  If ridesharing  systems and other forms of public transit  increase in efficiency, fewer people will  rely  on
personal vehicles to meet their  transport needs. Thus a smart on-demand system could be a signi ﬁcant step in  reducing costs and
carbon emissions worldwide.
     The state of a transit  system can change rapidly, and static  models lack the ﬂexibility  to  adapt to changes in a timely  manner.
Because they ignore the elasticity of demand and price,  such models can result in  inefficiencies that  stem from  overestimation of
improvements in the level of service—a limitation  that could be reduced or eliminated if  non-myopic considerations were taken into
account. Thus what is needed is a smarter system that anticipates stochastic elements and dynamically adapts to them. Among other
things, such a system should be able to incorporate high-speed-communication technologies in order to calculate opportunity  costs,
so that social beneﬁts can be divided  between customers and providers—a prospect which  has been ignored in  traditional  transit
systems.
     Real-time information   problems introduce  a new dimension  to  decision-making in  dynamic models. These models involve  an
iterative process: making decisions, then accessing information, then making more decisions and accessing more information, and so
on. A Markov  decision  process (MDP) with  discrete time  intervals  can be modeled using  a Bellman equation  (Powell,  2011), as
follows:
                                                                                                                                                                            (1)

whereVt is the value of the optimal dynamic policy, is the immediate payoff of the decision under state  (which is also typically
driven by information  on exogenous stochastic variables, and varies in size based on the underlying distribution  of the variable(s)),
and γ is a discount factor. The conditional expectation term depends on the future state while it depends on the state St which de ﬁnes

as location of vehicles and may also depend on . It can cost time and money to visit a state, so we have to consider the future value
of an action in terms of its  effect on improving  future decisions. As a result, we need to estimate the value function at a given state,
which necessitates a tradeoff between visiting that  state because we think it  represents the best decision (“exploration”)   and estimation
of downstream values to make what we think  is the best possible decision (“exploitation”). As a result, the Bellman equation
becomes one that depends on both past (through network effects) and future (through  the expected value function).  Sayarshad and
Chow (2015) proposed an approximation  method  in which  the network  effects and the  timing  effects as illustrated with  an  intermediate
value function  (based on Chow and Regan, 2011; Chow and Sayarshad, 2015) from Eq. (1)  are lumped together into  one
effect:
                                                                                                                                                                          (2)

whereK  is the number of link components for which decisions must be made,Ω is approximated by an expression derived from anM/
M/s queue, and the  whole expression is split  into user costs and system costs. The state of all vehicles constitutes the  state of the
system at time , denoted as . The approach we propose in this study is not limited to only a single time-step look-ahead and instead
exploits our estimates of the value function  under  an inﬁnite-horizon look-ahead.
     Autonomous vehicles (AVs)  are potentially  disruptive,  both  technologically  and socially, with   claimed beneﬁts comprising  increased safety,
road utilization, energy savings, and driver productivity (Zhang and Pavone, 2016, Ma et al., 2017a). For example, it
has been asserted that if ﬁve  percent of new  vehicles sold in  2030 (about  800,000 vehicles) were  shifted to  autonomous taxis, it
would save about 7million  barrels of oil  per year and reduce annual greenhouse gas emissions by 2.1–2.4 million metric tons of CO2
per year, which  is equal to  the emissions savings from more  than a thousand 2-megawatt  wind  turbines (Greenblatt  and Saxena,
2015; Greenblatt and Shaheen, 2015). The technology which is needed to enable automation, particularly at levels 3–5 (based on the
levels of AVs which have been de ﬁned by The National Highway Transportation  Safety Administration),  is extremely sophisticated
and would  have to make use of  high-performance computational  hardware,  state-of-the-art online  models, decision-making algorithms,
and real-time information.   Our proposed methodology could possibly be applied as a decision support tool for  future urban
mobility  systems such as smart taxis and autonomous vehicle  ﬂeets. The smart system could also offer numerous transportation,
infrastructure, land  use, and environmental beneﬁts (increased overall public transit  and non-motorized  modal use, including  rail,
walking, bicycling,  and  carpooling), as well  as social beneﬁts (access by college students; availability in rural,  suburban, and  
disadvantaged communities; reduced stress on commuters; and often  preferential parking  and other  incentives). As a  result, the 
potential energy savings expected from AVs are much larger than the estimated worst-case growth in energy use and other factors (see
Greenblatt and Shaheen, 2015). Smart on-demand mobility systems would therefore be a valuable alternative  to personal vehicles;
they would also be a help to communities with  poor or nonexistent public transit,  such as low-income communities, rural areas, and
large suburbs.
     The framework for our proposed system, where dynamic operations are driven by real-time information, is shown in Fig. 1, which
lists the  various technologies and  data sources needed to  ensure a viable  “smart”  transit  system. For example,  communications
equipment is needed so that customers can send travel requests to the dispatch center. Intelligent vehicle-highways systems (IVHS) is
an application of  information  and communications technologies (ICT) that  could bring about  better control  of the ﬂow  of vehicles.
Electronic data  interchange (EDI)  consisting  of the  electronic  transfer  from  computer to  computer  could  increase the speed of

                                                                                                      193

3



                                                                                    Users


                     Communica  on  equipment                                    Reserva  on Center

                            Internet-Telephone 


                                                                                                                                 IVHS
                                                                                  GPS

                                     Vehicles 
                                                                                                          Dispatch center




                                                                      Operators                       Predic  ons: 
                                                                                                                                                     Transit planning
                                                                      (e.g., Uber)                      Customer 
                                  Tra   c Map                                                             arrivals 



                                                                                                                                                       Guidance (routes, 
                                                                                                              Posioning
                                                                                                                                                                   eet) 
                                                                                GIS 
                                    Database 
                                      system                              EDI 




                                                                Past                                                                                       Classication of 
                                                                                                   Dynamic Optimization 
                                                          information                                                                                    informatioon  



                      Traffic 
                                                                                                        New 
                  Information                                                                                                     Vans
                                                                                                   Parameters                                                Predicted 
                  Center (TIC)                                                                                                                              information 

                                                                                                                                       Taxicab


                                                                                                                                         Bus


                                  Fig. 1. Key components of “smart” mobility-on-demand service (adapted from: Sayarshad, 2015).


communication and control all aspects of the system using message data. Mobile-device communication systems are one example of a
technology capable of meeting this need (Markovíc et  al., 2015). The framework  has three key functions: dispatch/vehicle  routing,
prediction of passenger travel demand (see Sayarshad and Chow, 2016), and repositioning of idle vehicles (see Sayarshad and Chow,
2017). The functions are tied together as key components of a “smart transit system” framework where dynamic operations are driven
by real-time information. In  this paper, we focus on the ﬁrst function. To the best of our knowledge, our contributions in this work are
the following:

●   We propose a non-myopic dynamic dial-a-ride and pricing approach using a multi-server queue under in ﬁnite-horizon look-ahead
     which is  able to estimate opportunity  costs and future pro ﬁts in relation  to  price and service quality.
●   We present results of simulations which  illustrate  that our approach can perform  better in  terms of social welfare  than existing
     MDP approaches which are based on a single-server queue.
●   The simulations show that our proposed pricing policy is the socially  efficient point  with respect to the realized social welfare, as
     opposed to the revenue-maximizing price  which is consistent with  standard monopoly  pricing that  ignores user delay.
●   We derive the  customers’ queue-joining threshold  using a balking  rule with   respect to the socially  efficient  level and  revenue
     maximization.


     The remainder  of  the paper  is organized  as follows:  The literature  is  reviewed  in greater  detail  in  Section 2. We  provide  a
description of the proposed framework  in Section 3. The dynamic  ridesharing and pricing  approach is formulated in  Section 4, the
results of the simulations we conducted to verify the model and algorithm are presented in Section 5, and also the effectiveness of the


                                                                                                      194

4


algorithm  utilized in  investigating  the socially efficient  level and the  equilibrium-joining   behavior in  our simulation  of actual NYC
taxicab data is validated  in Section 5.2.


2.  Literature   review


     There are a couple of models proposed in the literature  for the  static DARP, as well as for the related static pickup and delivery
problems. In addition,  heuristics  to solve  DARPs have been proposed by Qu and Bard (2013),  Parragh (2011),  and Muelas et al.
(2015). A comprehensive review  of the static, stochastic, and dynamic dial-a-ride  literature  is given in  Ho et al.  (2018).
     A smart  mobility  system framework takes real-time data  and optimizes the dispatch/routing   system to serve passengers, which
can increase the effective  capacity, manage demand, improve  accessibility,  and maximize  efficiency  and beneﬁt. Combining advanced
technologies such as mobile devices with  scalable models such as dynamic ridesharing models can  improve the  ability  to
make routing decisions for  a ﬂ eet of vehicles in real time (see Sayarshad, 2015).
     One potential  solution  to the ﬁrst–last  mile problem  is the concept of  ﬂexible transport (or  transit) services (FTS). Most of the
previous transit simulation  studies extended the capabilities of traffic simulation models without  representation of transit operations
for speciﬁc applications. Cortés et al. (2005)  presented a general microsimulation  framework  for  evaluation of  transit  systems by
using a commercial  microsimulator.  Mulley   and Nelson (2009)  introduced  an operational  model  for  providing  transport  to  employment (T2E) services
and implemented it  in rural  areas.
     One of the most extensive frameworks for modeling of transit services is found in mathematical optimization models (see Psaraftis
et al., 2016). For example, Quadrifoglio et al. (2007, 2008) and Quadrifoglio  and Li (2009) introduced a mixed integer programming
(MIP) formulation  for  mobility  allowance shuttle transit  (MAST) where vehicles may deviate from a ﬁxed  path (one that includes a
few mandatory pick-up  and/or  drop-off  points) to  serve the demand within  a given service area. Liu  et al. (2015)  formulated  two
static optimization  models which  simultaneously consider multiple  trips,  heterogeneous vehicles, multiple request types, and multiple
vehicle  capacities and used a branch-and-cut algorithm  to  solve the problem. Braekers and Kovacs (2016) presented a static
multi-period  dial-a-ride problem  in order  to ensure driver consistency, by bounding  the maximum number  of different drivers that
transport a user over a given time horizon. Daganzo (2010) and Nourbakhsh and Ouyang (2011) provided a model where individual
buses operate without ﬁxed routes or  predetermined stops, and instead travel freely within   their own  service regions to pick up  or
drop off passengers. Liaw et al. (1996) considered integration of paratransit dial-a-ride  vehicles with  ﬁxed-route buses, in a system
where transportation  bookings are made in advance. Li and Quadrifoglio  (2010)  focused on the service performance of a demand-
responsive operating policy for  feeder transit services as opposed to a traditional  ﬁxed-route policy,  and when to  deterministically
switch between them.  Nair and  Miller-Hooks  (2010) and  Sayarshad (2015) formulated an  allocation–relocation  model to  address
optimization  of the movement of  vehicles to balance the system and the movement of staff needed to drive them.
     Several models have been created to optimize  a ﬂexible transit-operating design (see Agatz et al., 2012).  Schofer et al. (2003)
proposed a trip simulator  based on queuing theory  to assist planners of demand-responsive transit (DRT) services in developing  a
preliminary  estimate of the number of vehicles required for a new or modiﬁed DRT service. Horn (2002) designed a software system
for management of the  deployment of a  ﬂeet of demand-responsive passenger vehicles such as taxis or variably routed buses. Lee
et al. (2004) adopted a dispatch system that uses the Global Positioning System (GPS) and is based on the nearest-coordinate method
(i.e., the taxi assigned to each booking is the one with the shortest direct straight-line  distance to the customer’s location). Lee et al.
(2005) focused only  on  trips  from  homes to a  metropolitan  rapid  transit  (MRT)  station (many-to-one)  for  a paratransit  system.
Daganzo (1978) proposed an approximate multi-server queue system for many-to-many demand-responsive transportation systems.
Daganzo (1984) described a checkpoint demand-responsive system where pick-up and drop-off  points  are at centralized  locations
called checkpoints.
     Countless models given in  the literature  consider customer  demand when deciding  to visit  a future  state. Cortés et al.  (2009)
formulated the problem as a hybrid predictive  control problem  using state-space models and a two-stage look-ahead and proposed a
particle swarm optimization (PSO) heuristic to solve it. Mitrović-Minić  et al. (2004) proposed a double-horizon-based heuristic for the
dynamic pickup  and delivery  problem  which  considers the impact  of the  decision on both  a short-term  horizon and  a long-term
horizon when  assigning a new request to  a vehicle. Ichoua  et al.  (2006) de ﬁ ned a new strategy based on dummy customers 
(representing predicted requests) on vehicle routes to provide good coverage of future request arrivals. Ulmer et al. (2017) proposed an
MDP for dynamic routing  problems and showed that route-based MDPs are equivalent to the conventional MDP model. Thomas and
White (2004) formulated  an expected cost-to-go function for dynamic  route selection as an MDP with look-ahead demand requests.
Our proposed methodology is different from the existing non-myopic dynamic dial-a-ride problem (DARP) that allows for only a one-
or two-stage look-ahead policy.  Hyytiä  et  al. (2012)  consider an approximate  multi-server  queue system comprised of individual
M/M/1  queues that assign new customers to FTS vehicles to minimize both the user cost and the system cost.
     Sayarshad and Chow (2015) introduced  a new non-myopic pricing  policy  for  a dial-a-ride problem  based on MDPs. The model
considers only a single-server queue for on-demand mobility services. But, a multi-server queuing approach could be more realistic.
For instance, the previous model considers only a single-server queue that the parallelM/M/1 queues are independent of each other,
while we consider an M/M/s   queuing  system that has s parallel servers with 1 queue. Thus, the proposed approach serves as a new
integrated framework for  future studies in urban  transport informatics  and design of types of urban mobility  models such as for the
bimodal dial-a-ride  problem  (Guo et  al.,  2017, Frei  et al.,  2017, Chen and  Nie, 2017).  Using the  proposed queuing system, the
customer delay and sojourn  time are calculated  based on the multi-server  queue system where the optimal  tours are optained  by
running a TSPPD algorithm. This is an insertion  heuristic  that takes a list  of pickup and  delivery nodes, and assigns a tour by ﬁrst
ﬁnding the best drop-off tour, and then inserting the pickup locations. Moreover, the demand function used in this study is calculated

                                                                                                      19














                                           Fig. 2. Illustration of the non-myopic dynamic DARP as a multi-server queue system.


on the basis of a more realistic probability   that a customer will  join  the service. The proposed pricing strategy to assign priority  to
customers based on their willingness  to  pay is considered to  attain  a social optimum.  We also ﬁnd  the  customers’ queue-joining
threshold using a balking rule with  respect to the socially efficient  level and the revenue maximization that  it provides. The socially
efficient level  is providing  a new approximation  method  into the  dynamic vehicle  routing  and pricing  problem for  computing the
conditional expected future cost portion, which  is otherwise computationally  difficult  or impossible to calculate. Finally,  actual New
York City taxicab data  were conducted to test the efficiency  of the proposed approach.
     This study investigates a tour-based ride-sharing/hailing   model that  captures (a) tour length  per vehicle, (b)  passenger waiting
times, (c) dynamic price with  elasticity  of demand, and (d) customers’ queue-joining threshold  with  respect to the socially efficient
level. Compared to  traditional  ﬂ exible transit  services such as dial-a-ride, ridesharing  services based on this model  could offer  a
distinct cost advantage and operational efficiency, and in the long run provide local residents with new employment opportunities  to
serve as self-driver systems.



3.  Problem  deﬁnition


     We propose a new non-myopic policy  that  retains the core network  structure, based on the premise of using queuing theory  to
approximate the  future  steady-state condition for  non-myopic  DARP. In doing  so, we  approximate the  value function  instead of
approximating short time horizons, decision iteration functions,  or states. It is possible to derive analytical expressions for the steady-state
average delay costs, which is computationally cheap (Sayarshad, 2015). Consider the algorithm in Fig. 2,  where the proposed
new approximation   queuing approach  for  the non-myopic  dynamic  DARP with   look-ahead policy  is  illustrated.  The  algorithm
consists of two modules: an optimization module and a simulation module. The optimization module  attempts to ﬁnd potential  tours
by running  a TSPPD algorithm. The simulation  module  uses an approximation queuing approach  to capture customer delays and
system costs.
     Customers send requests for travel from one location to another; as a result, dispatch, routing, and pricing decisions are made in
real time  by the dispatch  center. The subgraph during  each dispatch assignment consists of ,where O is a vector
containing current locations of all vehicles, D is a pre-speci ﬁed idle vehicle location, is the set of pickup nodes, and P − is the set of
drop-off nodes, where since a vehicle may be en route to dropping off an existing customer when a new customer arrives at
that dropoff point  (or an earlier one) along the route. In the numerical  experiments in this study, D is set to be the ﬂeet depot, but in
future studies it  can be  set to some other  location by  Sayarshad and Chow (2017)  model, which  proposed a new  queuing-based
formulation of the online problem of relocating idle  vehicles that entails calling an assignment routine to pre-position the idle vehicle.




                                                                                                      196

6

4. Proposed methodology
In this section, we formulate a new parameterized heuristic control policy for vehicle and route selection in a demand-responsive
mobility system. This multi-server queue policy aims to maximize social welfare (less a weighted sum of the distances traveled by the
vehicles (per passenger)) and the mean passenger travel time, as described below.
Requests are assumed to be from single individuals arriving according to a Poisson process with intensity function λ. We consider
time windows as being built into the elastic demand function. Since the objective includes customers’ inconvenience, the pricing
reﬂects late deliveries, which in turn feeds back to the demand for service. Based on the price quoted by the system, an arriving
customer will join the queue if and only if the beneﬁt is greater than the expected waiting cost. The service time, μ, is exponentially
distributed and is approximated by a function μ ̂ which is obtained from historical data and de ﬁned as the average number of served
trip requests per time unit. Note that μ ̂ depends on operator’s dispatching, vehicles’ positions, and routing policy, and arrival rate of
customers. The service order can reorder the pick-ups and deliveries dynamically. For example, user 1 may be assigned to vehicle 1,
but when user 2 arrives he/she might get picked up and dropped off by vehicle 1 if its intended route is along his/her way and the
solution maximizes the value function. Each customer is assumed to receive the same reward R by using the transit service. But
heterogeneous rewards may be possible and user behavior may be sensitive to them, which will be considered in future research (see
Qiu et al., 2018). Additionally, a modiﬁcation also may be called for if we were to assume that the reward obtained depends in some
way on the effective traffic density.
To provide the optimal policy for the DARP, we model the incremental operational value functions using dynamic optimization as
denote the state of the queue with n tasks, and let
functions of demand (Dp()), system cost (Cs) and user delay(Cu). Let 
denote the amount of unﬁnished work for each vehicle v (expressed in terms of the time it would take to ﬁnish it),
where yi denotes the service time (amount of work) for customer i, is a vehicle, and is a tour obtained for a traveling salesman
problem (TSP) (see Larson and Odoni, 1981). Since the objective function includes future user costs, we have to calculate the relative
during the time intervals  and (Hyytiä et al., 2012). Then the social welfare function can be
value of state 
expressed as
 (3)
where customers earn a reward of R upon completion of service at the queuing station. Both the system cost and the customer delay
are formulated in Section 4.1 and a demand function based on the probability that a customer will join the queue is proposed in
Section 4.2.
4.1. Customer delay and tour length
In this section, we present a new social optimization problem for an on-demand mobility system with inﬁnite-horizon look-ahead:
to ﬁnd an equilibrium point using a set of functions that considers demand, system costs, and user costs, which are incorporated into
the socially efficient level as explained in Section 4.3. We solve  for each vehicle  for the new passenger under consideration,
where is the current tour length of the vehicle. We solve a traveling salesman problem with pickup and delivery
(TSPPD) based on Mosheiov (1994) to ﬁnd potential tours. The TSP tour construction of the drop-off nodes is solved using
Christoﬁdes’ (1976) algorithm. The parameter,is a weight that differentiates the system cost from the user delay. The
relative value can be calculated as follows (see Appendix A):

4.2. Demand function and pricing policy
In this section, we introduce tolling strategies to assign priority to customers based on their willingness to pay to attain a social
optimum and the revenue-maximizing price. Sayarshad and Chow (2015) incorporate pricing into the non-myopic policy based on an
M/M/1 queue by Mendelson and Whang (1990). Since our approximation is based on an M/M/s, so we need to examine the pricing
policy based on a multi-server queue. Knudsen (1972) enforced a multi-server queue using the balking level M //MSN/andobtained
197

7

the price by imposing a toll on the customers who join the system. In this particular system, the necessary toll will depend on the
waiting-time function. Then, the toll p should be such that

By this logic, customers will adopt the following threshold strategy:

The customer joins the queue if and leaves if.This sets up the framework to study pricing effects in queues.
However, the toll  is not related to the customer arrival rate or the opportunity cost. Thus, we must take into account the effects of
random ﬂuctuations in demand on the price.
We now focus our attention on the relationship between prices and equilibrium arrival rates. The newly arrived customer is
required to choose one of two scenarios: either (i) he joins the queue, incurs the losses associated with spending some of his time in it,
and ﬁnally obtains a reward of R; or (ii) he refuses to join the queue, an action which does not bring about any gain or loss. The
probability that the passenger eventually will receive a reward of R is the same as the ruin probability in the gambler’s ruin problem
when the initial asset is n, the goal is n + 1 and the winning probability in each round is equal to .Let , so the

ruin probability is equal to (Rao, 2009; Gross and Harris, 1998; Wol , 1989). Corresponding to the price, p, customers join

the queue only when the queue length is less than or equal to the thresholdkp().For a maximum queue length of,the probability
of observing customers in the system is 
, thus the probability that a customer will join the queue is given by the


following equation (Rao, 2009; Gross and Harris, 1998; Wolff, 1989; Hassin and Haviv, 2006):



In other words, the demand function is:


The aggregate arrival rate Λ is distingushed from an individual decision structure,forthe decision of whether to join
the system.
4.2.1. The socially efficient price
Knudsen (1972) enforced a multi-server queue using the balking level, M //Msn/max, and determined nmax by solving the equation
.Then nmax is given by max .Therefore, it will usually be possible to ﬁnd the socially efficient price by

enforcing a balking level , where is a point that maximizes the function Z, and the price is then given by

.Toﬁnd the price that accounts for customer waiting times, we may write the following function (Hassin and Haviv,

2006; Rao, 2009):

where

where as.The ﬁrst term is the rate at which reward is earned, and the second term is the rate at which waiting cost
is incurred. The second term, ,represents the average number of customers in the queue at any point in time and can be
expressed in terms of (Gross and Harris, 1998).
4.2.2. The revenue-maximizing price
In this scenario, the system should charge the price that maximizes the expected revenue rate . Thus weneed to ﬁnd the
price  that maximizes the value of the revenue function which is consistent with the standard monopoly pricing model.


Two key computations shape our integration of non-myopic pricing into our approach: One is to ﬁnd the price p r that maximizes
the expected revenue. The other is to calculate a positive price p∗ that accounts for customer waiting times. This is due to the negative
system and user costs that are present in our model under in ﬁnite-horizon look-ahead. In this situation, the second method is more
useful in calculating non-myopic pricing, by considering a customer’s decision to join or leave, which will inﬂuence future arrivals.
198

8

Apart from discovering this framework above, Naor (1969) also provides the following comparative:

where is the customers’ queue-joining threshold strategy and

4.3. Social optimization
Now we can write down the social welfare function using the new pricing framework and the relative cost (which is calculated by
Eq. (4)). The ﬁrst term on the right-hand side is the rate at which reward is earned, the second term is the rate at which tour length is
to ensure that the units are the same as the
incurred, and the last term is the total customer delay. We also divide the costs 
beneﬁts.


where SW denotes the social welfare:

where are calculated by Eq. (4.b) and Eq. (4.c), respectively. Once we have formulated the social optimization problem,
we need to run the following algorithm in real-time operation:
Algorithm 1
Upon arrival of a new user n
of every vehicle from the time of arrival of user 
1. Update the positions and service statuses of the tour 
2. For each vehicle v:
2.1. Solve a TSPPD algorithm to obtain a potential tour ξn
For a given current vehicle location O, together with the set of pickup nodes , the set of drop-off nodes , the vehicle
capacity , and the distances between every node pair 
2.1.1. Create a TSP tour  for.
2.1.2. For each , insert  into  such that
a. The capacity constraint at that insertion point and all subsequent nodes is feasible.
b. l is visited before its corresponding drop-off.
c. The increased tour length is minimized.
2.1.3. Update the capacities at each node in the tour from the insertion point, and go to step 3.
3. Determine 
3.A. Solve for the socially efficient price 
n
3.B. Solve for the revenue-maximizing price pnr
4. Choose the vehicle that solves Eq. (13.a). Update as the new tour for that vehicle while keeping the other vehicles’ tours the
same as before.
5. Experimental results
The experimental study is designed to address the following questions:
● Does the proposed methodology work with respect to the customer’s inconvenience and the system’seffort in order to improve
transportation to workplaces? How much better does our policy work in terms of social welfare? In Section 5.1, we demonstrate
the effectiveness of the proposed algorithm by comparing it to Sayarshad and Chow’s approach, which is a single-server queue
system.
● Does the proposed methodology work in large and smart cities? In Section 5.2, a simulation of real-time operation was conducted
to test the efficiency of the proposed approach based on NYC taxicab data.
● Can we evaluate dynamic ridesharing using the revenue-maximizing price policy and the socially efficient price policy? We
empirically demonstrate that we can ﬁnd the socially efficient level by applying the proposed policy to the social optimization
199

9

Table 1
Output times under the single-server queue system.
User Arrival time (min) Pickup time (min) Drop-off time (min) Price
1 0.8189 83.5919 112.4041 6.9975
2 1.3042 4.8304 15.7659 9.6842
3 1.3224 10.6798 20.6063 7.9705
4 2.0778 3.9174 21.3826 9.1387
5 2.6647 12.2206 41.7767 9.6334
6 3.2175 29.9558 43.3387 8.2416
7 3.4932 9.0410 22.8385 9.4824
8 4.3065 59.6919 94.8464 9.0606
9 4.5217 103.5679 125.0394 9.4764
10 4.6119 136.9937 151.1590 9.1953
11 5.0672 31.8329 72.4274 4.3707
12 5.6507 118.3572 148.5094 9.2664
13 6.5001 16.7912 45.3020 9.5332
problem.
● What is the capability of this model in terms of tour length and social welfare using different pricing policies? In Section 5.2.2.1,
we compare our policy with different pricing policies to provide a new framework for pricing, which contrasts sharply with
traditional pricing policies that ignore customer convenience.
● How can we ﬁnd the customers’ queue-joining threshold based on revenue and social optimization? In Section 5.2.2.2, we de-
monstrate a trade-off between price and queue- joining threshold strategies which provides guidelines for agencies in allocating
funds per passenger.
The simulations of the policies and arrivals were run in Matlab R2015b on a computer with an Intel Core i5-2450 CPU with
2.5GHz and 8GB RAM, running on a 64-bit Windows 7 operating system.
5.1. Illustrative example
In this section, we compare the performance of our proposed MDP with that of a single-server queuing system (Sayarshad and
Chow, 2015). The following inputs were used for the non-myopic pricing policy: 
speed=4/6 (km/min), vehicle capacity= 4, ﬂeet size= 3. We evaluated tour length, average social welfare, and price under two
types of queuing policies. The arrival times, pickup times, and drop-off times of each of the 13 arrivals are shown in Table 1. The
resulting tours of the three vehicles under the single-server queue system are as follows: Vehicle 1 serves passengers 1, 7, 8, 9, 10, 11,
12, and 13; vehicle 2 serves passengers 2, and 3; and vehicle 3 serves passengers 4, 5, and 6. The tour lengths of vehicles 1, 2, and 3
are 154.336 min; 22.986 min, and 46.082 min, respectively.
Under the multi-server queue system, vehicle 1 serves passengers 1, 2, 3 and 6; vehicle 2 serves passengers 7, 8, 9, 10, 11, 12 and
13; and vehicle 3 serves passengers 4, and 5. The tour lengths of vehicles 1, 2, and 3 are 49.143, 112.007, and 34.252 min, respectively.
The arrival times, pickup times, and drop-off times of each of the 13 arrivals under the multi-server queue system are
shown in Table 2. This example demonstrates that the proposed policy can yield a diﬀerent set of tours and can also improve upon the
tour lengths of the vehicles.
Fig. 3 shows a comparison of the social welfare under the proposed policy to that under the single-server queue policy. After
conducting 30 simulated runs, we found that the average social welfare for the proposed policy is 64.472, while the single-server
queue system has an average social welfare of 40.906. Therefore, the proposed dynamic dial-a-ride problem increases the average
Table 2
Output times under the multi-server queue system.
User Arrival time (min) Pickup time (min) Drop-off time (min) Price
1 0.8189 6.3302 19.2681 6.9975
2 1.3042 34.2883 46.1175 9.6842
3 1.3224 23.2151 41.2770 7.9705
4 2.0778 3.9174 21.3826 8.9093
5 2.6647 12.2206 30.9071 8.9444
6 3.2175 9.0632 26.1677 8.2416
7 3.4932 32.5524 55.6793 9.4824
8 4.3065 92.5327 108.5516 5.4822
9 4.5217 25.6759 37.8125 9.4764
10 4.6119 13.8865 23.2598 9.1953
11 5.0672 64.6738 105.2682 4.3707
12 5.6507 19.4086 27.4336 9.2664
13 6.5001 49.6321 78.1428 7.7853
200

10

120
100
80
60
Social welfare
40
20
0
1 2 3 4 5 6 7 8 9 101112131415161718192021222324252627282930
30 simulated runs
Proposed policy Single-server policy
Fig. 3. Comparison of the social welfare for the proposed MDP to that for the policy of Sayarshad and Chow (2015).
social welfare by up to 37% compared to the single-server queuing system. Using the same input parameters as stated earlier, we were
able to calculate and compare the average vehicle miles traveled (VMT) under the proposed dial-a-ride policy against that under the
single-server policy. Our analysis demonstrates that the average VMT is 125.58km under the proposed model, while it is 148.93km
under the single-server policy. The solution time to run the simulations is three seconds.
5.2. New York City taxicab simulation
5.2.1. NYC taxicab data
The NYC taxicab data ﬁle contains about 13 million records, with comprehensive information on taxi pick-up and drop-off dates,
times, locations (latitude/longitude), fares (including tolls, tips, and total fare amounts), and distances traveled. In this study, all the
experiments were conducted using data from a single origin zone—Lincoln Square (zone ID 3806) in Manhattan. Lincoln Square is
located at the intersection of Broadway and Columbus Avenue, between West 65th and West 66th streets. For our empirical study, we
selected one zone with high congestion in Manhattan. Each ﬁle has about 1 million rows, and each zone has about 100,000 rows. 5
full weekdays of data are extracted from the ﬁle to estimate the parameters for the simulation scenario. Thus, we considered large
samples for one zone to provide the parameter setting in our large case study. Pick-up and drop-off data are shown in Fig. 4. Fig. 5
shows the prices of the trips; the number of trips made on April 12, 2013 was 2224, and 1893 taxis were operated from Lincoln
Square to all destinations.
5.2.2. The simulation
For this simulation, the experiments were conducted using data for 99 passenger arrivals between 8AM and 9AM. The following
parameters were used for the ﬂexible dispatch approach between 8AM and 9AM: speed = 4/6km/min, 
vehicle capacity = 4, 0.5, , ﬂeet size = 70, and 99 passengers in each of the 30 runs. Fig. 6 shows the resulting tours
of 99 passenger arrivals between 8AM and 9AM.
5.2.2.1. Non-myopic pricing strategy and equilibrium. We evaluated the average performance of the proposed non-myopic policy under
the revenue-maximizing price and the socially efficient price. In this scenario, we used the simulated tour results with 99 passenger
arrivals between 8AM and 9AM. Fig. 7 shows the elasticity of the tour length for the two pricing policies. The manager may charge
Fig. 4. (a) Pick-ups and (b) drop-offs of passengers in the Lincoln Square zone on April 12, 2013.
201

11


                                                                                                                   Trips

                                                              Fig.  5.  Prices of trips  from  the Lincoln  Square zone (April  12, 2013).






                               Fig.  6. The resulting  tours  under the  non-myopic  policy  (from  the Lincoln  Square zone on April  12,  2013).


                        


                                   Tour length 8

                              

                                                                                                                 Simulated  runs


                                                      Tour length (the socially e cient price)          Tour length (the revenue-maximizing price)

                                                      Fig. 7.  Comparison of  elasticity  of tour  length  using under  two pricing  policies.


the  price   that   maximizes   the   expected   revenue , while   from   the   perspective   of   a social   planner,    we  would    charge  the   socially
efficient   price    The ﬁrst  is consistent    with   standard   monopoly    pricing   models,   but   the  second  is  not.  This  is  due  to  the  negative
congestion   externality    that   is  present  in  queuing    models.  The  average   solution   time   to  run  the   simulations    is 30  s.


                                                                                                                     202

12


Simulated runs
SW (the revenue-maximizing price) SW (the socially efficient price)
Fig. 8. Comparison of elasticity of social welfare using different pricing policies.
Fig. 8 represents elasticity of the social welfare under the two different pricing policies. This illustrates that the socially efficient
level can have the greater effect: The minimum, average, and maximum social welfare for that pricing policy are 1287.573,
1279.577, and 1297.252, respectively; the corresponding values when the price is based on the maximum revenue are 795.254,
668.744, and 990.636, respectively. The proposed policy using the socially efficient price performed better than using the standard
monopoly pricing mechanism, with an increase in social welfare of 47% (Min), 38% (Ave), and 23% (Max) over the 30 runs. In
addition, our analysis demonstrates that the average VMT is 460.53km under the socially efficient pricing policy, and 483.53km
under the revenue-maximizing pricing policy. Customers make their joining decisions out of self-interest, but their decisions inﬂuence
the well-being of future arrivals. In this situation, pricing can be used to address such externalities and increase social welfare.
5.2.2.2. Equilibrium behavior evaluation. We surveyed a sample of passengers and prices to provide an analysis of price and queue-joining
threshold strategies for two different time periods: one with high congestion and one with low congestion. For simulated runs
between 12 midnight and 1AM, we used the following parameters: = ,speed =4/6km/min, , μ ̂ = 6, vehicle
capacity= 4, 0.5,,ﬂeetsize = 25, and 32 passengers in each of the 30 runs.
Based on actual NewYork data, the prices of those trips from the Lincoln Square zone to all destinations are shown in Fig. 9. Prices
depend on the operator’s dispatching policy, vehicles’ positions, routing policy, service rate, value of time, and arrival rate of
customers. Figure (a) shows that the average price between 12 midnight and 1AM is $20, but Figure (b) shows that the average price
between 8AM and 9AM is 15. For this study, we assume that the customer reward R does not depend on traffic density, but the
possibility that the reward obtained depends in some way on the effective traffic congestion could be considered in future research.
Note that the high prices (as shown in Fig. 9) are related to serving passengers from Lincoln Square to New York airports. So, it will be
necessary in future studies to better understand how shared taxis are impacting airport access demand and consumer surplus (Ma
et al., 2017b). Hence, a dynamic dispatch as well as updating price to evaluate the welfare effects of the range of shared taxi matching
and fare allocation policies for airport access will be considered in future research.
Trips
Trips
a) 12 midnight to 1 AM                                               b) 8 AM to 9 AM 
Fig. 9. Prices of trips from the Lincoln Square zone on April 12, 2013.
203

13


                                                                                              Queue-joining threshold
                                                                                                 a) 8 AM to 9 AM 

                                                     
                                                                                              Queue-joining threshold
                                                                                               b) 12 midnight to 1 AM  

                                                 Fig. 10. The trade-off between price and queue-joining threshold strategies.


     Fig. 10 shows the trade-off between the price and queue-joining  threshold strategies which were  calculated using the proposed
policy for two  different time periods. For instance, we found that the revenue-maximizing prices for the last customer in each period
(customer 32 in the low-congestion period, and customer 99 in  the high-congestion period) are 
                                                                                                              
the socially efficient  prices are 
                                                   Equivalently, 
the socially efficient queue-joining and revenue-maximizing queue-joining thresholds are                                                                                         ∗                          r
                                                                 respectively,          for  customer ,  and,
respectively, for customer.  At the  social efficient  price, customers are interested in joining the  system, but they are  not
joining when the price is. This relatively high price in  the case means the supply falls short of the potential demand. This result
shows that why the traditional   taxicab dispatch system is unable to compete with  or rival  the new  forms of commerce.
     As for revenue-maximizing  price, recall that                                                                                       
                                                                              32 = "$"20 where the demand rate become 0. Note thatkp ()=0for        
the revenue-maximizing price scenario and represents the customers who are not interested in joining  the system, because there is no available
socially efficient level with  which to calculate prices and thresholds. For the individual passenger, the optimal strategy is therefore to
join the  queue if and  only if  the number  of passengers already present in the queue at the  instant of  his arrival  is more  than the
threshold kp() r . Hence, one advantage of our  simulations is  that  they introduce  a new  approximation  method into  the  dynamic
vehicle routing  and pricing problem  for computing  the conditional  expected future cost portion  using the queue-joining  threshold,
which is otherwise computationally  difficult  or impossible to  calculate. This motivates agencies to allocate budget and resources per
passenger in order to provide service using queue-joining threshold strategies. Based on this key insight, the proposed framework is
able to consider equilibrium-joining   behavior  together with  socially optimal  behavior  under a dynamic  pricing policy.  The results
show that the  queue-joining threshold  which uses the revenue-maximizing  price is less than that  which  uses the socially efficient
price; this agrees with the  results of Naor (1969)  and Knudsen (1972).


6.  Conclusion


     Our on-demand mobility   framework provides  not only  direct competition  for  traditional  taxi  services but also opportunities  to
revolutionize conventional  transit services that are plagued by high costs and low ridership, particularly  in  poor communities, rural
areas, or sprawling suburbs. We proposed a competitive  on-demand mobility   system with  a new framework  pricing  policy  under
inﬁnite-horizon  look-ahead. We demonstrated that  the proposed approach works  better using a multi-server  queue system, and it
increases the average social welfare by up to 37%.
     Operational  considerations often inﬂuence  the  optimal  price and  provide more  realistic  equilibrium  outcomes in  competitive
settings. We considered the  equilibrium-joining   behavior  for  the  socially  optimal  problem  under different pricing  policies.  The
proposed policy using  the socially  efficient  price increases the social welfare  by  up to  40% compared to  the standard monopoly
pricing policy.  As a result, we expect the proposed pricing framework to serve as a deﬁnitive research reference for future studies in

                                                                                                      204

14

dynamic ridesharing and the design of new types of urban mobility systems such as carsharing, ridesharing, demand-responsive
transit, smart taxis, and autonomous vehicle ﬂeets, all of which require consideration of willingness-to-pay policies.
Simulations of our dynamic ridesharing problem were conducted using actual NYC taxicab data. We presented an analysis of the
average performance of the proposed non-myopic policy using the revenue-maximizing price and the socially efficient price. Our
proposed policy is able to calculate the equilibrium-joining behavior of each region during the time horizon and to easily compute the
conditional expected future cost portion, which could be very useful for future studies on non-myopic dynamic optimization policies.
The ridesharing concept could be integrated with other modes of transportation such as public transit. We suggest proceeding in
this area of research with a dynamic multimodal transit system under a non-myopic pricing policy which can evaluate the customer
delay for different modes of transportation (Pender et al., 2017); this could be considered in a future study by adding the equilibration
of supply and demand using a Poisson game (Myerson, 1998). The most immediate extension of the proposed research could
involve integrating a bimodal dial-a-ride problem and consider the impact of ﬂeet design and vehicle miles traveled on carbon
emissions. An integrated system of this nature has the potential to greatly improve the efficiency and scalability of urban transportation
while simultaneously reducing negative externalities such as congestion and pollution. Provision of a dynamic optimization
model for switching between ﬁxed and ﬂexible transit services using non-myopic dynamic dispatch would be highly valuable. For
example, such a system could guide smart vehicles in a service area that requires many-to-many ﬁrst–last-mile transit service, either
for conventional shared vehicles that provide ﬁxed-route transit service or for vehicles that provide ﬂexible-route on-demand mobility.

Appendix A. Tour length and customer delay
denote the state of the queue with n tasks, and let denote the amount of unﬁnished work (backlog),
Let 
expressed in terms of the time it would take to ﬁnish it, where  denotes the service time (amount of work) for customer is a
vehicle, and is a tour obtained for a traveling salesman problem (TSP). Since the objective includes user costs, we begin by
formulating the unﬁnished work for two time intervals, ,whered is the time that corresponds to the current state (see
Sayarshad and Gao, 2017; Hyytiä et al., 2012). The second term on the right-hand side of Eq. (A.1) denotes the extra cost during the
time interval less the mean cost during that interval. From the customer’s perspective (sojourn time), the relative value of
in a multi-server queuing system is
state 


where  is the relative value during time interval.
In order to calculate the second term on the right-hand side, we can use a property of the Poisson process (see Hyytiä et al., 2012;
Ross, 1970). The number of new customers arriving during the time interval, which we denote by A, obeys a Poisson distribution 
with parameter: Poisson. Let Z denote the cost accrued by time d by the A customers that arrive during 
Given that = Ai customers have arrived, their arrival times are uniformly distributed in, which gives, hence

The third term on the right-hand side of Eq. (A.1) is due to the mean cost rate during the time interval (see Gross and Harris,
1998). Thus, the contribution to the relative value during the time interval  is

where

Next, consider the time interval . At time the initial n customers have departed and the number of customers in the queue
205

15

is A. Utilizing the memoryless property (a property of a Poisson process), the contribution to the relative value during , (d∞) is

Thus, we need to provide the relative value function using the Howard equation in state n (Howard, 1971):



where μncorresponds to the cost rate with n customers, saisthemeancostrate,and is the probability

of a customer being delayed, which is called Erlang’s C formula (see Gross and Harris, 1998):

Krishnan (1987,1990) showed that V n+ 1−Vn satis ﬁes Eq (A.4) and that the value function in an M //Msis given by:

where Erl (,s a)is the Erlang’s formula with s servers and the offered load of aλ= / ̂ μandw is the average delay for service which gives
Since relative costs alone are signi ﬁcant, we set V0 to 0 and obtain

Thus, the contribution to the relative value during the time interval  is


The free policy parameter θ, θ ⩽⩽ 01,isaweight that differentiates the user cost from the system cost, and β is the degree of
look-ahead that’s needed to accommodate the difference between the myopic policy and the non-myopic policy. Thus, the relative
cost is:

We need only solve ξ for each vehicle v for the new passenger under consideration and select the minimum value decrease where
is the current tour length of the vehicle.


16
H.R. Sayarshad, H. Oliver Gao Transportation Research Part C 91 (2018) 192–208
Appendix B. Glossary of symbols
See Table A1.
Table A1
Nomenclature.
Symbol Description
customer arrival rate
service rate
state of the queue with n tasks
 tour
the previous tour updated to the time of the time of arrival of the previous user, n−1
n−1
reward of service
( Dp) demand function
system cost
user cost
a vehicle
a weight that differentiates the system cost from the user delay
 tour length of a vehicle–route pair
 relative cost of a vehicle–route pair
average delay for service
number of vehicles
number of customers
 fair price
 revenue-maximizing price
socially efficient price
customers’ queue-joining threshold
aggregate arrival rate
 relative value
degree of look-ahead
 set of pickup nodes
set of drop-off nodes
set to the ﬂeet depot
current vehicle location
probability of winning in a gambler’s ruin problem
P probability of losing in a gambler’s ruin problem
a vehicle capacity
distance between a pair of nodes

